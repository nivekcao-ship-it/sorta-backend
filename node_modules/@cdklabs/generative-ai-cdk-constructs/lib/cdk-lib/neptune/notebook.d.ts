/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { Resource, Size } from 'aws-cdk-lib';
import * as ec2 from 'aws-cdk-lib/aws-ec2';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as sagemaker from 'aws-cdk-lib/aws-sagemaker';
import { Construct } from 'constructs';
import { INeptuneGraph } from './graph';
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
/**
 * Properties for creating a new Neptune Graph Notebook
 */
export interface NeptuneGraphNotebookProps {
    /**
     * The Neptune Analytics Graph this notebook will be connected to
     */
    readonly graph: INeptuneGraph;
    /**
     * The instance type of the notebook instance
     * @default "ec2.InstanceType.of(ec2.InstanceClass.T3, ec2.InstanceSize.MEDIUM)"
     */
    readonly instanceType?: ec2.InstanceType;
    /**
     * The size of the EBS volume
     * @default - 5 GiB
     */
    readonly volumeSize?: Size;
}
/**
 * Creates a Neptune Graph Notebook for a given graph.
 *
 * A Neptune Graph Notebook provides:
 * - Web-based interactive environment for querying and visualizing graph data
 * - Support for multiple query languages:
 *   - OpenCypher for property graph queries
 *   - Gremlin for traversal-based queries
 *   - SPARQL for RDF graph queries
 * - Built-in visualization capabilities for exploring graph relationships
 * - Sample notebooks and tutorials to help you get started
 * - Integration with popular data science libraries   *
 * This option is only supported when `publicConnectivity` is set to `true`. For private graphs,
 * you should create your own notebook deployment using the `NeptuneGraphNotebook` Construct and
 * configure the appropriate VPC and security group settings.
 *
 * **Note: Creating a notebook will incur additional AWS costs for the notebook instance.**
 *
 * @see https://docs.aws.amazon.com/neptune/latest/userguide/graph-notebooks.html
 */
export declare class NeptuneGraphNotebook extends Resource {
    readonly role: iam.Role;
    readonly lifecycleConfig: sagemaker.CfnNotebookInstanceLifecycleConfig;
    readonly volumeSize: Size;
    readonly instanceType: ec2.InstanceType;
    readonly graphExplorerEndpoint: string;
    readonly jupyterLabEndpoint: string;
    private readonly __resource;
    constructor(scope: Construct, id: string, props: NeptuneGraphNotebookProps);
}
