/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { Grant, IGrantable } from 'aws-cdk-lib/aws-iam';
import { BedrockFoundationModel, IInvokable } from '../models';
import { IInferenceProfile, InferenceProfileType } from './common';
export declare enum CrossRegionInferenceProfileRegion {
    /**
     * Cross-region Inference Identifier for the European area.
     * According to the model chosen, this might include:
     * - Frankfurt (`eu-central-1`)
     * - Ireland (`eu-west-1`)
     * - Paris (`eu-west-3`)
     */
    EU = "eu",
    /**
     * Cross-region Inference Identifier for the United States area.
     * According to the model chosen, this might include:
     * - N. Virginia (`us-east-1`)
     * - Oregon (`us-west-2`)
     * - Ohio (`us-east-2`)
     */
    US = "us",
    /**
     * Cross-region Inference Identifier for the Asia-Pacific area.
     * According to the model chosen, this might include:
     * - Tokyo (`ap-northeast-1`)
     * - Seoul (`ap-northeast-2`)
     * - Mumbai (`ap-south-1`)
     * - Singapore (`ap-southeast-1`)
     * - Sydney (`ap-southeast-2`)
     */
    APAC = "apac"
}
export declare const REGION_TO_GEO_AREA: {
    [key: string]: CrossRegionInferenceProfileRegion;
};
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
export interface CrossRegionInferenceProfileProps {
    /**
     * The geographic region where the traffic is going to be distributed. Routing
     * factors in user traffic, demand and utilization of resources.
     */
    readonly geoRegion: CrossRegionInferenceProfileRegion;
    /**
     * A model supporting cross-region inference.
     * @see https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html
     */
    readonly model: BedrockFoundationModel;
}
/******************************************************************************
 *                        NEW CONSTRUCT DEFINITION
 *****************************************************************************/
/**
 * Cross-region inference enables you to seamlessly manage unplanned traffic
 * bursts by utilizing compute across different AWS Regions. With cross-region
 * inference, you can distribute traffic across multiple AWS Regions, enabling
 * higher throughput and enhanced resilience during periods of peak demands.
 * @see https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html
 */
export declare class CrossRegionInferenceProfile implements IInvokable, IInferenceProfile {
    static fromConfig(config: CrossRegionInferenceProfileProps): CrossRegionInferenceProfile;
    /**
     * @example 'us.anthropic.claude-3-5-sonnet-20240620-v1:0'
     */
    readonly inferenceProfileId: string;
    /**
     * @example 'arn:aws:bedrock:us-east-1:123456789012:inference-profile/us.anthropic.claude-3-5-sonnet-20240620-v1:0'
     */
    readonly inferenceProfileArn: string;
    /**
     * @example InferenceProfileType.SYSTEM_DEFINED
     */
    readonly type: InferenceProfileType;
    /**
     * The underlying model supporting cross-region inference.
     */
    readonly inferenceProfileModel: BedrockFoundationModel;
    /** This equals to the inferenceProfileArn property, useful just to implement IInvokable interface*/
    readonly invokableArn: string;
    private constructor();
    /**
     * Gives the appropriate policies to invoke and use the Foundation Model.
     */
    grantInvoke(grantee: IGrantable): Grant;
    /**
     * Grants appropriate permissions to use the cross-region inference profile.
     * Does not grant permissions to use the model in the profile.
     */
    grantProfileUsage(grantee: IGrantable): Grant;
}
