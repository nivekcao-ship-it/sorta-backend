"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomDataSource = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
const aws_bedrock_1 = require("aws-cdk-lib/aws-bedrock");
const base_data_source_1 = require("./base-data-source");
const utils_1 = require("../../../common/helpers/utils");
/**
 * Sets up a custom Data Source to be added to a knowledge base.
 */
class CustomDataSource extends base_data_source_1.DataSourceNew {
    constructor(scope, id, props) {
        super(scope, id);
        // Assign attributes
        this.knowledgeBase = props.knowledgeBase;
        this.dataSourceType = base_data_source_1.DataSourceType.CUSTOM;
        // Turns out chunking and parsing are not replace so pass
        const chunkingStrategy = props.chunkingStrategy;
        const parsingStrategy = props.parsingStrategy;
        const theseAreNotReplacable = { chunkingStrategy, parsingStrategy };
        this.dataSourceName =
            props.dataSourceName ??
                (0, utils_1.generatePhysicalNameV2)(this, 'custom-ds', {
                    maxLength: 40,
                    lower: true,
                    separator: '-',
                    destroyCreate: theseAreNotReplacable,
                });
        this.kmsKey = props.kmsKey;
        // ------------------------------------------------------
        // Manage permissions for the data source
        // ------------------------------------------------------
        this.handleCommonPermissions(props);
        // ------------------------------------------------------
        // L1 Instantiation
        // ------------------------------------------------------
        this.__resource = new aws_bedrock_1.CfnDataSource(this, 'DataSource', {
            ...this.formatAsCfnProps(props, {
                type: this.dataSourceType,
            }),
        });
        this.dataSourceId = this.__resource.attrDataSourceId;
    }
}
exports.CustomDataSource = CustomDataSource;
_a = JSII_RTTI_SYMBOL_1;
CustomDataSource[_a] = { fqn: "@cdklabs/generative-ai-cdk-constructs.bedrock.CustomDataSource", version: "0.1.309" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWRhdGEtc291cmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2Nkay1saWIvYmVkcm9jay9kYXRhLXNvdXJjZXMvY3VzdG9tLWRhdGEtc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFFSCx5REFBd0Q7QUFLeEQseURBQStGO0FBQy9GLHlEQUF1RTtBQWlCdkU7O0dBRUc7QUFDSCxNQUFhLGdCQUFpQixTQUFRLGdDQUFhO0lBc0NqRCxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQTRCO1FBQ3BFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakIsb0JBQW9CO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztRQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLGlDQUFjLENBQUMsTUFBTSxDQUFDO1FBRTVDLHlEQUF5RDtRQUN6RCxNQUFNLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztRQUNoRCxNQUFNLGVBQWUsR0FBRyxLQUFLLENBQUMsZUFBZSxDQUFDO1FBQzlDLE1BQU0scUJBQXFCLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsQ0FBQztRQUNwRSxJQUFJLENBQUMsY0FBYztZQUNqQixLQUFLLENBQUMsY0FBYztnQkFDcEIsSUFBQSw4QkFBc0IsRUFBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO29CQUN4QyxTQUFTLEVBQUUsRUFBRTtvQkFDYixLQUFLLEVBQUUsSUFBSTtvQkFDWCxTQUFTLEVBQUUsR0FBRztvQkFDZCxhQUFhLEVBQUUscUJBQXFCO2lCQUNyQyxDQUFDLENBQUM7UUFDTCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFFM0IseURBQXlEO1FBQ3pELHlDQUF5QztRQUN6Qyx5REFBeUQ7UUFDekQsSUFBSSxDQUFDLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXBDLHlEQUF5RDtRQUN6RCxtQkFBbUI7UUFDbkIseURBQXlEO1FBQ3pELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSwyQkFBYSxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDdEQsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFO2dCQUM5QixJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWM7YUFDMUIsQ0FBQztTQUNILENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztJQUN2RCxDQUFDOztBQXpFSCw0Q0EwRUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqICBDb3B5cmlnaHQgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKS4gWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogIHdpdGggdGhlIExpY2Vuc2UuIEEgY29weSBvZiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiAgb3IgaW4gdGhlICdsaWNlbnNlJyBmaWxlIGFjY29tcGFueWluZyB0aGlzIGZpbGUuIFRoaXMgZmlsZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAnQVMgSVMnIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVNcbiAqICBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xuICogIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDZm5EYXRhU291cmNlIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWJlZHJvY2snO1xuaW1wb3J0IHsgSUtleSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1rbXMnO1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XG5cbmltcG9ydCB7IElLbm93bGVkZ2VCYXNlIH0gZnJvbSAnLi8uLi9rbm93bGVkZ2UtYmFzZXMva25vd2xlZGdlLWJhc2UnO1xuaW1wb3J0IHsgRGF0YVNvdXJjZUFzc29jaWF0aW9uUHJvcHMsIERhdGFTb3VyY2VOZXcsIERhdGFTb3VyY2VUeXBlIH0gZnJvbSAnLi9iYXNlLWRhdGEtc291cmNlJztcbmltcG9ydCB7IGdlbmVyYXRlUGh5c2ljYWxOYW1lVjIgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vaGVscGVycy91dGlscyc7XG5cbi8qKlxuICogSW50ZXJmYWNlIHRvIGFkZCBhIG5ldyBDdXN0b21EYXRhU291cmNlIHRvIGFuIGV4aXN0aW5nIEtCXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ3VzdG9tRGF0YVNvdXJjZUFzc29jaWF0aW9uUHJvcHMgZXh0ZW5kcyBEYXRhU291cmNlQXNzb2NpYXRpb25Qcm9wcyB7fVxuXG4vKipcbiAqIEludGVyZmFjZSB0byBjcmVhdGUgYSBuZXcgQ3VzdG9tIERhdGEgU291cmNlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDdXN0b21EYXRhU291cmNlUHJvcHMgZXh0ZW5kcyBDdXN0b21EYXRhU291cmNlQXNzb2NpYXRpb25Qcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUga25vd2xlZGdlIGJhc2UgdG8gYXNzb2NpYXRlIHdpdGggdGhlIGRhdGEgc291cmNlLlxuICAgKi9cbiAgcmVhZG9ubHkga25vd2xlZGdlQmFzZTogSUtub3dsZWRnZUJhc2U7XG59XG5cbi8qKlxuICogU2V0cyB1cCBhIGN1c3RvbSBEYXRhIFNvdXJjZSB0byBiZSBhZGRlZCB0byBhIGtub3dsZWRnZSBiYXNlLlxuICovXG5leHBvcnQgY2xhc3MgQ3VzdG9tRGF0YVNvdXJjZSBleHRlbmRzIERhdGFTb3VyY2VOZXcge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQ29tbW9uIGF0dHJpYnV0ZXMgZm9yIGFsbCBuZXcgZGF0YSBzb3VyY2VzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvKipcbiAgICogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBkYXRhIHNvdXJjZS5cbiAgICogQGV4YW1wbGUgJ0pIVUVWWFVaTVUnXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgZGF0YVNvdXJjZUlkOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgdHlwZSBvZiBkYXRhIHNvdXJjZS5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBkYXRhU291cmNlVHlwZTogRGF0YVNvdXJjZVR5cGU7XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZGF0YSBzb3VyY2UuXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgZGF0YVNvdXJjZU5hbWU6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBrbm93bGVkZ2UgYmFzZSBhc3NvY2lhdGVkIHdpdGggdGhlIGRhdGEgc291cmNlLlxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGtub3dsZWRnZUJhc2U6IElLbm93bGVkZ2VCYXNlO1xuICAvKipcbiAgICogVGhlIEtNUyBrZXkgdG8gdXNlIHRvIGVuY3J5cHQgdGhlIGRhdGEgc291cmNlLlxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGttc0tleT86IElLZXk7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBVbmlxdWUgdG8gdGhpcyBjbGFzc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gTm8gdW5pcXVlIGF0dHJpYnV0ZXMgYXQgdGhlIG1vbWVudCAuLi5cbiAgLy9cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEludGVybmFsIE9ubHlcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBUaGUgRGF0YSBTb3VyY2UgY2ZuIHJlc291cmNlLlxuICAgKi9cbiAgcHJpdmF0ZSByZWFkb25seSBfX3Jlc291cmNlOiBDZm5EYXRhU291cmNlO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBDdXN0b21EYXRhU291cmNlUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQpO1xuICAgIC8vIEFzc2lnbiBhdHRyaWJ1dGVzXG4gICAgdGhpcy5rbm93bGVkZ2VCYXNlID0gcHJvcHMua25vd2xlZGdlQmFzZTtcbiAgICB0aGlzLmRhdGFTb3VyY2VUeXBlID0gRGF0YVNvdXJjZVR5cGUuQ1VTVE9NO1xuXG4gICAgLy8gVHVybnMgb3V0IGNodW5raW5nIGFuZCBwYXJzaW5nIGFyZSBub3QgcmVwbGFjZSBzbyBwYXNzXG4gICAgY29uc3QgY2h1bmtpbmdTdHJhdGVneSA9IHByb3BzLmNodW5raW5nU3RyYXRlZ3k7XG4gICAgY29uc3QgcGFyc2luZ1N0cmF0ZWd5ID0gcHJvcHMucGFyc2luZ1N0cmF0ZWd5O1xuICAgIGNvbnN0IHRoZXNlQXJlTm90UmVwbGFjYWJsZSA9IHsgY2h1bmtpbmdTdHJhdGVneSwgcGFyc2luZ1N0cmF0ZWd5IH07XG4gICAgdGhpcy5kYXRhU291cmNlTmFtZSA9XG4gICAgICBwcm9wcy5kYXRhU291cmNlTmFtZSA/P1xuICAgICAgZ2VuZXJhdGVQaHlzaWNhbE5hbWVWMih0aGlzLCAnY3VzdG9tLWRzJywge1xuICAgICAgICBtYXhMZW5ndGg6IDQwLFxuICAgICAgICBsb3dlcjogdHJ1ZSxcbiAgICAgICAgc2VwYXJhdG9yOiAnLScsXG4gICAgICAgIGRlc3Ryb3lDcmVhdGU6IHRoZXNlQXJlTm90UmVwbGFjYWJsZSxcbiAgICAgIH0pO1xuICAgIHRoaXMua21zS2V5ID0gcHJvcHMua21zS2V5O1xuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gTWFuYWdlIHBlcm1pc3Npb25zIGZvciB0aGUgZGF0YSBzb3VyY2VcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB0aGlzLmhhbmRsZUNvbW1vblBlcm1pc3Npb25zKHByb3BzKTtcblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIEwxIEluc3RhbnRpYXRpb25cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB0aGlzLl9fcmVzb3VyY2UgPSBuZXcgQ2ZuRGF0YVNvdXJjZSh0aGlzLCAnRGF0YVNvdXJjZScsIHtcbiAgICAgIC4uLnRoaXMuZm9ybWF0QXNDZm5Qcm9wcyhwcm9wcywge1xuICAgICAgICB0eXBlOiB0aGlzLmRhdGFTb3VyY2VUeXBlLFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICB0aGlzLmRhdGFTb3VyY2VJZCA9IHRoaXMuX19yZXNvdXJjZS5hdHRyRGF0YVNvdXJjZUlkO1xuICB9XG59XG4iXX0=