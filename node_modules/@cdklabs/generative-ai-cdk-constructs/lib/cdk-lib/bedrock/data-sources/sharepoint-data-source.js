"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharePointDataSource = exports.SharePointObjectType = exports.SharePointDataSourceAuthType = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
const aws_bedrock_1 = require("aws-cdk-lib/aws-bedrock");
const base_data_source_1 = require("./base-data-source");
const utils_1 = require("../../../common/helpers/utils");
/**
 * Represents the authentication types available for connecting to a SharePoint data source.
 */
var SharePointDataSourceAuthType;
(function (SharePointDataSourceAuthType) {
    /**
     * OAuth 2.0 Client Credentials flow for authentication with SharePoint.
     * Your secret authentication credentials in AWS Secrets Manager should include:
     * - `username`: The admin username for SharePoint authentication
     * - `password`: The admin password associated with the username
     * - `clientId`: The client ID (also known as application ID)
     * - `clientSecret`: The client secret
     */
    SharePointDataSourceAuthType["OAUTH2_CLIENT_CREDENTIALS"] = "OAUTH2_CLIENT_CREDENTIALS";
})(SharePointDataSourceAuthType || (exports.SharePointDataSourceAuthType = SharePointDataSourceAuthType = {}));
/**
 * Represents the SharePoint object types that can be accessed by the data source connector.
 */
var SharePointObjectType;
(function (SharePointObjectType) {
    /**
     * Represents a SharePoint page, which typically contains web parts and content.
     */
    SharePointObjectType["PAGE"] = "Page";
    /**
     * Represents a calendar event in SharePoint.
     */
    SharePointObjectType["EVENT"] = "Event";
    /**
     * Represents a file stored in SharePoint document libraries.
     */
    SharePointObjectType["FILE"] = "File";
})(SharePointObjectType || (exports.SharePointObjectType = SharePointObjectType = {}));
/**
 * Sets up an data source to be added to a knowledge base.
 */
class SharePointDataSource extends base_data_source_1.DataSourceNew {
    constructor(scope, id, props) {
        super(scope, id);
        // Assign attributes
        this.knowledgeBase = props.knowledgeBase;
        this.dataSourceType = base_data_source_1.DataSourceType.SHAREPOINT;
        this.dataSourceName =
            props.dataSourceName ??
                (0, utils_1.generatePhysicalNameV2)(this, 'sharepoint-ds', { maxLength: 40, lower: true, separator: '-' });
        this.siteUrls = props.siteUrls;
        this.domain = props.domain;
        this.authSecret = props.authSecret;
        this.kmsKey = props.kmsKey;
        // ------------------------------------------------------
        // Manage permissions for the data source
        // ------------------------------------------------------
        this.handleCommonPermissions(props);
        this.authSecret.grantRead(this.knowledgeBase.role);
        // ------------------------------------------------------
        // L1 Instantiation
        // ------------------------------------------------------
        this.__resource = new aws_bedrock_1.CfnDataSource(this, 'DataSource', {
            ...this.formatAsCfnProps(props, {
                type: this.dataSourceType,
                sharePointConfiguration: {
                    sourceConfiguration: {
                        authType: SharePointDataSourceAuthType.OAUTH2_CLIENT_CREDENTIALS,
                        credentialsSecretArn: this.authSecret.secretArn,
                        hostType: 'ONLINE',
                        domain: props.domain,
                        siteUrls: this.siteUrls,
                        tenantId: props.tenantId,
                    },
                    crawlerConfiguration: props.filters
                        ? {
                            filterConfiguration: {
                                type: 'PATTERN',
                                patternObjectFilter: {
                                    filters: props.filters?.map(item => ({
                                        objectType: item.objectType,
                                        inclusionFilters: item.includePatterns,
                                        exclusionFilters: item.excludePatterns,
                                    })),
                                },
                            },
                        }
                        : undefined,
                },
            }),
        });
        this.dataSourceId = this.__resource.attrDataSourceId;
    }
}
exports.SharePointDataSource = SharePointDataSource;
_a = JSII_RTTI_SYMBOL_1;
SharePointDataSource[_a] = { fqn: "@cdklabs/generative-ai-cdk-constructs.bedrock.SharePointDataSource", version: "0.1.309" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVwb2ludC1kYXRhLXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jZGstbGliL2JlZHJvY2svZGF0YS1zb3VyY2VzL3NoYXJlcG9pbnQtZGF0YS1zb3VyY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILHlEQUF3RDtBQU14RCx5REFBK0Y7QUFDL0YseURBQXVFO0FBRXZFOztHQUVHO0FBQ0gsSUFBWSw0QkFVWDtBQVZELFdBQVksNEJBQTRCO0lBQ3RDOzs7Ozs7O09BT0c7SUFDSCx1RkFBdUQsQ0FBQTtBQUN6RCxDQUFDLEVBVlcsNEJBQTRCLDRDQUE1Qiw0QkFBNEIsUUFVdkM7QUFFRDs7R0FFRztBQUNILElBQVksb0JBZVg7QUFmRCxXQUFZLG9CQUFvQjtJQUM5Qjs7T0FFRztJQUNILHFDQUFhLENBQUE7SUFFYjs7T0FFRztJQUNILHVDQUFlLENBQUE7SUFFZjs7T0FFRztJQUNILHFDQUFhLENBQUE7QUFDZixDQUFDLEVBZlcsb0JBQW9CLG9DQUFwQixvQkFBb0IsUUFlL0I7QUFzRUQ7O0dBRUc7QUFDSCxNQUFhLG9CQUFxQixTQUFRLGdDQUFhO0lBZ0RyRCxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQWdDO1FBQ3hFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakIsb0JBQW9CO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztRQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLGlDQUFjLENBQUMsVUFBVSxDQUFDO1FBQ2hELElBQUksQ0FBQyxjQUFjO1lBQ2pCLEtBQUssQ0FBQyxjQUFjO2dCQUNwQixJQUFBLDhCQUFzQixFQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDaEcsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7UUFDbkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBRTNCLHlEQUF5RDtRQUN6RCx5Q0FBeUM7UUFDekMseURBQXlEO1FBQ3pELElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRW5ELHlEQUF5RDtRQUN6RCxtQkFBbUI7UUFDbkIseURBQXlEO1FBQ3pELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSwyQkFBYSxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDdEQsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFO2dCQUM5QixJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWM7Z0JBQ3pCLHVCQUF1QixFQUFFO29CQUN2QixtQkFBbUIsRUFBRTt3QkFDbkIsUUFBUSxFQUFFLDRCQUE0QixDQUFDLHlCQUF5Qjt3QkFDaEUsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTO3dCQUMvQyxRQUFRLEVBQUUsUUFBUTt3QkFDbEIsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNO3dCQUNwQixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7d0JBQ3ZCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtxQkFDekI7b0JBQ0Qsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLE9BQU87d0JBQ2pDLENBQUMsQ0FBQzs0QkFDQSxtQkFBbUIsRUFBRTtnQ0FDbkIsSUFBSSxFQUFFLFNBQVM7Z0NBQ2YsbUJBQW1CLEVBQUU7b0NBQ25CLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7d0NBQ25DLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTt3Q0FDM0IsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGVBQWU7d0NBQ3RDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxlQUFlO3FDQUN2QyxDQUFDLENBQUM7aUNBQ0o7NkJBQ0Y7eUJBQ0Y7d0JBQ0QsQ0FBQyxDQUFDLFNBQVM7aUJBQ2Q7YUFDRixDQUFDO1NBQ0gsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDO0lBQ3ZELENBQUM7O0FBckdILG9EQXNHQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiAgd2l0aCB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqICBvciBpbiB0aGUgJ2xpY2Vuc2UnIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICdBUyBJUycgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFU1xuICogIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zXG4gKiAgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENmbkRhdGFTb3VyY2UgfSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtYmVkcm9jayc7XG5pbXBvcnQgeyBJS2V5IH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWttcyc7XG5pbXBvcnQgeyBJU2VjcmV0IH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLXNlY3JldHNtYW5hZ2VyJztcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ2NvbnN0cnVjdHMnO1xuXG5pbXBvcnQgeyBJS25vd2xlZGdlQmFzZSB9IGZyb20gJy4vLi4va25vd2xlZGdlLWJhc2VzL2tub3dsZWRnZS1iYXNlJztcbmltcG9ydCB7IERhdGFTb3VyY2VBc3NvY2lhdGlvblByb3BzLCBEYXRhU291cmNlTmV3LCBEYXRhU291cmNlVHlwZSB9IGZyb20gJy4vYmFzZS1kYXRhLXNvdXJjZSc7XG5pbXBvcnQgeyBnZW5lcmF0ZVBoeXNpY2FsTmFtZVYyIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2hlbHBlcnMvdXRpbHMnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGF1dGhlbnRpY2F0aW9uIHR5cGVzIGF2YWlsYWJsZSBmb3IgY29ubmVjdGluZyB0byBhIFNoYXJlUG9pbnQgZGF0YSBzb3VyY2UuXG4gKi9cbmV4cG9ydCBlbnVtIFNoYXJlUG9pbnREYXRhU291cmNlQXV0aFR5cGUge1xuICAvKipcbiAgICogT0F1dGggMi4wIENsaWVudCBDcmVkZW50aWFscyBmbG93IGZvciBhdXRoZW50aWNhdGlvbiB3aXRoIFNoYXJlUG9pbnQuXG4gICAqIFlvdXIgc2VjcmV0IGF1dGhlbnRpY2F0aW9uIGNyZWRlbnRpYWxzIGluIEFXUyBTZWNyZXRzIE1hbmFnZXIgc2hvdWxkIGluY2x1ZGU6XG4gICAqIC0gYHVzZXJuYW1lYDogVGhlIGFkbWluIHVzZXJuYW1lIGZvciBTaGFyZVBvaW50IGF1dGhlbnRpY2F0aW9uXG4gICAqIC0gYHBhc3N3b3JkYDogVGhlIGFkbWluIHBhc3N3b3JkIGFzc29jaWF0ZWQgd2l0aCB0aGUgdXNlcm5hbWVcbiAgICogLSBgY2xpZW50SWRgOiBUaGUgY2xpZW50IElEIChhbHNvIGtub3duIGFzIGFwcGxpY2F0aW9uIElEKVxuICAgKiAtIGBjbGllbnRTZWNyZXRgOiBUaGUgY2xpZW50IHNlY3JldFxuICAgKi9cbiAgT0FVVEgyX0NMSUVOVF9DUkVERU5USUFMUyA9ICdPQVVUSDJfQ0xJRU5UX0NSRURFTlRJQUxTJyxcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBTaGFyZVBvaW50IG9iamVjdCB0eXBlcyB0aGF0IGNhbiBiZSBhY2Nlc3NlZCBieSB0aGUgZGF0YSBzb3VyY2UgY29ubmVjdG9yLlxuICovXG5leHBvcnQgZW51bSBTaGFyZVBvaW50T2JqZWN0VHlwZSB7XG4gIC8qKlxuICAgKiBSZXByZXNlbnRzIGEgU2hhcmVQb2ludCBwYWdlLCB3aGljaCB0eXBpY2FsbHkgY29udGFpbnMgd2ViIHBhcnRzIGFuZCBjb250ZW50LlxuICAgKi9cbiAgUEFHRSA9ICdQYWdlJyxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIGNhbGVuZGFyIGV2ZW50IGluIFNoYXJlUG9pbnQuXG4gICAqL1xuICBFVkVOVCA9ICdFdmVudCcsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBmaWxlIHN0b3JlZCBpbiBTaGFyZVBvaW50IGRvY3VtZW50IGxpYnJhcmllcy5cbiAgICovXG4gIEZJTEUgPSAnRmlsZScsXG59XG5cbi8qKlxuICogRGVmaW5lcyB0aGUgY3Jhd2xpbmcgZmlsdGVycyBmb3IgU2hhcmVQb2ludCBkYXRhIGluZ2VzdGlvbi4gVGhlc2UgZmlsdGVycyBhbGxvd1xuICogeW91IHRvIHNwZWNpZnkgd2hpY2ggY29udGVudCBzaG91bGQgYmUgaW5jbHVkZWQgb3IgZXhjbHVkZWQgZHVyaW5nIHRoZSBjcmF3bGluZyBwcm9jZXNzLlxuICogSWYgeW91IHNwZWNpZnkgYW4gaW5jbHVzaW9uIGFuZCBleGNsdXNpb24gZmlsdGVyIGFuZCBib3RoIG1hdGNoIGEgZG9jdW1lbnQsXG4gKiB0aGUgZXhjbHVzaW9uIGZpbHRlciB0YWtlcyBwcmVjZWRlbmNlIGFuZCB0aGUgZG9jdW1lbnQgaXNu4oCZdCBjcmF3bGVkLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFNoYXJlUG9pbnRDcmF3bGluZ0ZpbHRlcnMge1xuICAvKipcbiAgICogVGhlIFNoYXJlUG9pbnQgb2JqZWN0IHR5cGUgdGhpcyBmaWx0ZXIgYXBwbGllcyB0by5cbiAgICovXG4gIHJlYWRvbmx5IG9iamVjdFR5cGU6IFNoYXJlUG9pbnRPYmplY3RUeXBlO1xuICAvKipcbiAgICogT3B0aW9uYWwgYXJyYXkgb2YgcmVndWxhciBleHByZXNzaW9uIHBhdHRlcm5zIHRvIGluY2x1ZGUgc3BlY2lmaWMgY29udGVudC5cbiAgICogT25seSBjb250ZW50IG1hdGNoaW5nIHRoZXNlIHBhdHRlcm5zIHdpbGwgYmUgY3Jhd2xlZC5cbiAgICogQGV4YW1wbGUgWycuKnB1YmxpYy4qJywgJy4qc2hhcmVkLionXVxuICAgKi9cbiAgcmVhZG9ubHkgaW5jbHVkZVBhdHRlcm5zPzogc3RyaW5nW107XG4gIC8qKlxuICAgKiBPcHRpb25hbCBhcnJheSBvZiByZWd1bGFyIGV4cHJlc3Npb24gcGF0dGVybnMgdG8gZXhjbHVkZSBzcGVjaWZpYyBjb250ZW50LlxuICAgKiBDb250ZW50IG1hdGNoaW5nIHRoZXNlIHBhdHRlcm5zIHdpbGwgYmUgc2tpcHBlZCBkdXJpbmcgY3Jhd2xpbmcuXG4gICAqIEBleGFtcGxlIFsnLipwcml2YXRlLionLCAnLipjb25maWRlbnRpYWwuKiddXG4gICAqL1xuICByZWFkb25seSBleGNsdWRlUGF0dGVybnM/OiBzdHJpbmdbXTtcbn1cblxuLyoqXG4gKiBJbnRlcmZhY2UgdG8gYWRkIGEgbmV3IGRhdGEgc291cmNlIHRvIGFuIGV4aXN0aW5nIEtCXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcmVQb2ludERhdGFTb3VyY2VBc3NvY2lhdGlvblByb3BzIGV4dGVuZHMgRGF0YVNvdXJjZUFzc29jaWF0aW9uUHJvcHMge1xuICAvKipcbiAgICogVGhlIGRvbWFpbiBvZiB5b3VyIFNoYXJlUG9pbnQgaW5zdGFuY2Ugb3Igc2l0ZSBVUkwvVVJMcy5cbiAgICogQGV4YW1wbGUgXCJ5b3VyZG9tYWluXCJcbiAgICovXG4gIHJlYWRvbmx5IGRvbWFpbjogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIFNoYXJlUG9pbnQgc2l0ZSBVUkwvVVJMcy5cbiAgICogTXVzdCBzdGFydCB3aXRoIOKAnGh0dHBz4oCdLiBBbGwgVVJMcyBtdXN0IHN0YXJ0IHdpdGggc2FtZSBwcm90b2NvbC5cbiAgICogQGV4YW1wbGUgW1wiaHR0cHM6Ly95b3VyZG9tYWluLnNoYXJlcG9pbnQuY29tL3NpdGVzL215c2l0ZVwiXVxuICAgKi9cbiAgcmVhZG9ubHkgc2l0ZVVybHM6IHN0cmluZ1tdO1xuICAvKipcbiAgICogVGhlIGlkZW50aWZpZXIgb2YgeW91ciBNaWNyb3NvZnQgMzY1IHRlbmFudC5cbiAgICogQGV4YW1wbGUgXCJkMWMwMzVhNi0xZGNmLTQ1N2QtOTdlM1wiXG4gICAqL1xuICByZWFkb25seSB0ZW5hbnRJZDogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIEFXUyBTZWNyZXRzIE1hbmFnZXIgc2VjcmV0IHRoYXQgc3RvcmVzIHlvdXIgYXV0aGVudGljYXRpb24gY3JlZGVudGlhbHNcbiAgICogZm9yIHlvdXIgU2hhcmVwb2ludCBpbnN0YW5jZSBVUkwuIFNlY3JldCBtdXN0IHN0YXJ0IHdpdGggXCJBbWF6b25CZWRyb2NrLVwiLlxuICAgKi9cbiAgcmVhZG9ubHkgYXV0aFNlY3JldDogSVNlY3JldDtcbiAgLyoqXG4gICAqIFRoZSBmaWx0ZXJzIChyZWd1bGFyIGV4cHJlc3Npb24gcGF0dGVybnMpIGZvciB0aGUgY3Jhd2xpbmcuXG4gICAqIElmIHRoZXJlJ3MgYSBjb25mbGljdCwgdGhlIGV4Y2x1ZGUgcGF0dGVybiB0YWtlcyBwcmVjZWRlbmNlLlxuICAgKiBAZGVmYXVsdCBOb25lIC0gYWxsIHlvdXIgY29udGVudCBpcyBjcmF3bGVkLlxuICAgKi9cbiAgcmVhZG9ubHkgZmlsdGVycz86IFNoYXJlUG9pbnRDcmF3bGluZ0ZpbHRlcnNbXTtcbn1cblxuLyoqXG4gKiBJbnRlcmZhY2UgdG8gY3JlYXRlIGEgbmV3IHN0YW5kYWxvbmUgZGF0YSBzb3VyY2Ugb2JqZWN0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcmVQb2ludERhdGFTb3VyY2VQcm9wcyBleHRlbmRzIFNoYXJlUG9pbnREYXRhU291cmNlQXNzb2NpYXRpb25Qcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUga25vd2xlZGdlIGJhc2UgdG8gYXNzb2NpYXRlIHdpdGggdGhlIGRhdGEgc291cmNlLlxuICAgKi9cbiAgcmVhZG9ubHkga25vd2xlZGdlQmFzZTogSUtub3dsZWRnZUJhc2U7XG59XG5cbi8qKlxuICogU2V0cyB1cCBhbiBkYXRhIHNvdXJjZSB0byBiZSBhZGRlZCB0byBhIGtub3dsZWRnZSBiYXNlLlxuICovXG5leHBvcnQgY2xhc3MgU2hhcmVQb2ludERhdGFTb3VyY2UgZXh0ZW5kcyBEYXRhU291cmNlTmV3IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIENvbW1vbiBhdHRyaWJ1dGVzIGZvciBhbGwgbmV3IGRhdGEgc291cmNlc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgZGF0YSBzb3VyY2UuXG4gICAqIEBleGFtcGxlICdKSFVFVlhVWk1VJ1xuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGRhdGFTb3VyY2VJZDogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHR5cGUgb2YgZGF0YSBzb3VyY2UuXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgZGF0YVNvdXJjZVR5cGU6IERhdGFTb3VyY2VUeXBlO1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGRhdGEgc291cmNlLlxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGRhdGFTb3VyY2VOYW1lOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUga25vd2xlZGdlIGJhc2UgYXNzb2NpYXRlZCB3aXRoIHRoZSBkYXRhIHNvdXJjZS5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBrbm93bGVkZ2VCYXNlOiBJS25vd2xlZGdlQmFzZTtcbiAgLyoqXG4gICAqIFRoZSBLTVMga2V5IHRvIHVzZSB0byBlbmNyeXB0IHRoZSBkYXRhIHNvdXJjZS5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBrbXNLZXk/OiBJS2V5O1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gVW5pcXVlIHRvIHRoaXMgY2xhc3NcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBUaGUgZG9tYWluIG5hbWUgb2YgeW91ciBTaGFyZVBvaW50IGluc3RhbmNlLlxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGRvbWFpbjogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIEFXUyBTZWNyZXRzIE1hbmFnZXIgc2VjcmV0IHRoYXQgc3RvcmVzIHlvdXIgYXV0aGVudGljYXRpb24gY3JlZGVudGlhbHMuXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgYXV0aFNlY3JldDogSVNlY3JldDtcbiAgLyoqXG4gICAqIFRoZSBTaGFyZVBvaW50IHNpdGUgVVJML1VSTHMuXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgc2l0ZVVybHM6IHN0cmluZ1tdO1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gSW50ZXJuYWwgT25seVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIFRoZSBEYXRhIFNvdXJjZSBjZm4gcmVzb3VyY2UuXG4gICAqL1xuICBwcml2YXRlIHJlYWRvbmx5IF9fcmVzb3VyY2U6IENmbkRhdGFTb3VyY2U7XG5cbiAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IFNoYXJlUG9pbnREYXRhU291cmNlUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQpO1xuICAgIC8vIEFzc2lnbiBhdHRyaWJ1dGVzXG4gICAgdGhpcy5rbm93bGVkZ2VCYXNlID0gcHJvcHMua25vd2xlZGdlQmFzZTtcbiAgICB0aGlzLmRhdGFTb3VyY2VUeXBlID0gRGF0YVNvdXJjZVR5cGUuU0hBUkVQT0lOVDtcbiAgICB0aGlzLmRhdGFTb3VyY2VOYW1lID1cbiAgICAgIHByb3BzLmRhdGFTb3VyY2VOYW1lID8/XG4gICAgICBnZW5lcmF0ZVBoeXNpY2FsTmFtZVYyKHRoaXMsICdzaGFyZXBvaW50LWRzJywgeyBtYXhMZW5ndGg6IDQwLCBsb3dlcjogdHJ1ZSwgc2VwYXJhdG9yOiAnLScgfSk7XG4gICAgdGhpcy5zaXRlVXJscyA9IHByb3BzLnNpdGVVcmxzO1xuICAgIHRoaXMuZG9tYWluID0gcHJvcHMuZG9tYWluO1xuICAgIHRoaXMuYXV0aFNlY3JldCA9IHByb3BzLmF1dGhTZWNyZXQ7XG4gICAgdGhpcy5rbXNLZXkgPSBwcm9wcy5rbXNLZXk7XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBNYW5hZ2UgcGVybWlzc2lvbnMgZm9yIHRoZSBkYXRhIHNvdXJjZVxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHRoaXMuaGFuZGxlQ29tbW9uUGVybWlzc2lvbnMocHJvcHMpO1xuICAgIHRoaXMuYXV0aFNlY3JldC5ncmFudFJlYWQodGhpcy5rbm93bGVkZ2VCYXNlLnJvbGUpO1xuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gTDEgSW5zdGFudGlhdGlvblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHRoaXMuX19yZXNvdXJjZSA9IG5ldyBDZm5EYXRhU291cmNlKHRoaXMsICdEYXRhU291cmNlJywge1xuICAgICAgLi4udGhpcy5mb3JtYXRBc0NmblByb3BzKHByb3BzLCB7XG4gICAgICAgIHR5cGU6IHRoaXMuZGF0YVNvdXJjZVR5cGUsXG4gICAgICAgIHNoYXJlUG9pbnRDb25maWd1cmF0aW9uOiB7XG4gICAgICAgICAgc291cmNlQ29uZmlndXJhdGlvbjoge1xuICAgICAgICAgICAgYXV0aFR5cGU6IFNoYXJlUG9pbnREYXRhU291cmNlQXV0aFR5cGUuT0FVVEgyX0NMSUVOVF9DUkVERU5USUFMUyxcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzU2VjcmV0QXJuOiB0aGlzLmF1dGhTZWNyZXQuc2VjcmV0QXJuLFxuICAgICAgICAgICAgaG9zdFR5cGU6ICdPTkxJTkUnLFxuICAgICAgICAgICAgZG9tYWluOiBwcm9wcy5kb21haW4sXG4gICAgICAgICAgICBzaXRlVXJsczogdGhpcy5zaXRlVXJscyxcbiAgICAgICAgICAgIHRlbmFudElkOiBwcm9wcy50ZW5hbnRJZCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNyYXdsZXJDb25maWd1cmF0aW9uOiBwcm9wcy5maWx0ZXJzXG4gICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgZmlsdGVyQ29uZmlndXJhdGlvbjoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQQVRURVJOJyxcbiAgICAgICAgICAgICAgICBwYXR0ZXJuT2JqZWN0RmlsdGVyOiB7XG4gICAgICAgICAgICAgICAgICBmaWx0ZXJzOiBwcm9wcy5maWx0ZXJzPy5tYXAoaXRlbSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBvYmplY3RUeXBlOiBpdGVtLm9iamVjdFR5cGUsXG4gICAgICAgICAgICAgICAgICAgIGluY2x1c2lvbkZpbHRlcnM6IGl0ZW0uaW5jbHVkZVBhdHRlcm5zLFxuICAgICAgICAgICAgICAgICAgICBleGNsdXNpb25GaWx0ZXJzOiBpdGVtLmV4Y2x1ZGVQYXR0ZXJucyxcbiAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIHRoaXMuZGF0YVNvdXJjZUlkID0gdGhpcy5fX3Jlc291cmNlLmF0dHJEYXRhU291cmNlSWQ7XG4gIH1cbn1cbiJdfQ==