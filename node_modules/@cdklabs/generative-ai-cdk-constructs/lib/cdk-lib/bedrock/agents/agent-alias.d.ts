/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { IResource, Resource } from 'aws-cdk-lib';
import * as events from 'aws-cdk-lib/aws-events';
import * as iam from 'aws-cdk-lib/aws-iam';
import { Construct } from 'constructs';
import { IAgent } from './agent';
/******************************************************************************
 *                              COMMON
 *****************************************************************************/
/**
 * Represents an Agent Alias, either created with CDK or imported.
 */
export interface IAgentAlias extends IResource {
    /**
     * The unique identifier of the agent alias.
     * @example `TCLCITFZTN`
     */
    readonly aliasId: string;
    /**
     * The ARN of the agent alias.
     * @example `arn:aws:bedrock:us-east-1:123456789012:agent-alias/DNCJJYQKSU/TCLCITFZTN`
     */
    readonly aliasArn: string;
    /**
     * The underlying agent for this alias.
     */
    readonly agent: IAgent;
    /**
     * Grant the given principal identity permissions to perform actions on this agent alias.
     */
    grant(grantee: iam.IGrantable, ...actions: string[]): iam.Grant;
    /**
     * Grant the given identity permissions to invoke the agent alias.
     */
    grantInvoke(grantee: iam.IGrantable): iam.Grant;
    /**
     * Grant the given identity permissions to get the agent alias.
     */
    grantGet(grantee: iam.IGrantable): iam.Grant;
    /**
     * Define an EventBridge rule that triggers when something happens to this agent alias
     *
     * Requires that there exists at least one CloudTrail Trail in your account
     * that captures the event. This method will not create the Trail.
     *
     * @param id The id of the rule
     * @param options Options for adding the rule
     */
    onCloudTrailEvent(id: string, options?: events.OnEventOptions): events.Rule;
}
/******************************************************************************
 *                        ABSTRACT BASE CLASS
 *****************************************************************************/
/**
 * Abstract base class for an Agent.
 * Contains methods and attributes valid for Agents either created with CDK or imported.
 */
export declare abstract class AgentAliasBase extends Resource implements IAgentAlias {
    abstract readonly aliasId: string;
    abstract readonly aliasArn: string;
    abstract readonly agent: IAgent;
    /**
     * Grant the given principal identity permissions to perform actions on this agent alias.
     */
    grant(grantee: iam.IGrantable, ...actions: string[]): iam.Grant;
    /**
     * Grant the given identity permissions to invoke the agent alias.
     */
    grantInvoke(grantee: iam.IGrantable): iam.Grant;
    /**
     * Grant the given identity permissions to get the agent alias.
     */
    grantGet(grantee: iam.IGrantable): iam.Grant;
    /**
     * Define an EventBridge rule that triggers when something happens to this agent alias
     *
     * Requires that there exists at least one CloudTrail Trail in your account
     * that captures the event. This method will not create the Trail.
     *
     * @param id The id of the rule
     * @param options Options for adding the rule
     */
    onCloudTrailEvent(id: string, options?: events.OnEventOptions): events.Rule;
}
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
/**
 * Properties for creating a CDK-Managed Agent Alias.
 */
export interface AgentAliasProps {
    /**
     * The name for the agent alias.
     *
     * @default - "latest-{hash}"
     */
    readonly aliasName?: string;
    /**
     * The version of the agent to associate with the agent alias.
     *
     * @default - Creates a new version of the agent.
     */
    readonly agentVersion?: string;
    /**
     * The agent associated to this alias.
     */
    readonly agent: IAgent;
    /**
     * Description for the agent alias.
     */
    readonly description?: string;
}
/******************************************************************************
 *                      ATTRS FOR IMPORTED CONSTRUCT
 *****************************************************************************/
/**
 * Attributes needed to create an import
 */
export interface AgentAliasAttributes {
    /**
     * The Id of the agent alias.
     */
    readonly aliasId: string;
    /**
     * The name of the agent alias.
     */
    readonly aliasName?: string;
    /**
     * The underlying agent for this alias.
     */
    readonly agent: IAgent;
    /**
     * The agent version for this alias.
     */
    readonly agentVersion: string;
}
/******************************************************************************
 *                        NEW CONSTRUCT DEFINITION
 *****************************************************************************/
/**
 * Class to create an Agent Alias with CDK.
 * @cloudformationResource AWS::Bedrock::AgentAlias
 */
export declare class AgentAlias extends AgentAliasBase {
    /**
     * Brings an Agent Alias from an existing one created outside of CDK.
     */
    static fromAttributes(scope: Construct, id: string, attrs: AgentAliasAttributes): IAgentAlias;
    readonly agent: IAgent;
    readonly aliasId: string;
    readonly aliasArn: string;
    readonly aliasName: string;
    constructor(scope: Construct, id: string, props: AgentAliasProps);
}
