/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { Duration, IResource, Resource } from 'aws-cdk-lib';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as kms from 'aws-cdk-lib/aws-kms';
import { Construct } from 'constructs';
import { AgentActionGroup } from './action-group';
import { IAgentAlias } from './agent-alias';
import { AgentCollaborator, AgentCollaboratorType } from './agent-collaborator';
import { PromptOverrideConfiguration } from './prompt-override';
import { IGuardrail } from '../guardrails/guardrails';
import { IKnowledgeBase } from '../knowledge-bases/knowledge-base';
import { IInvokable } from '../models';
import { Memory } from './memory';
import { OrchestrationType, CustomOrchestration } from './orchestration';
/******************************************************************************
 *                              COMMON
 *****************************************************************************/
/**
 * Represents an Agent, either created with CDK or imported.
 */
export interface IAgent extends IResource {
    /**
     * The ARN of the agent.
     * @example "arn:aws:bedrock:us-east-1:123456789012:agent/OKDSJOGKMO"
     * @attribute
     */
    readonly agentArn: string;
    /**
     * The ID of the Agent.
     * @example "OKDSJOGKMO"
     * @attribute
     */
    readonly agentId: string;
    /**
     * The IAM role associated to the agent.
     */
    readonly role: iam.IRole;
    /**
     * Optional KMS encryption key associated with this agent
     */
    readonly kmsKey?: kms.IKey;
    /**
     * When this agent was last updated.
     */
    readonly lastUpdated?: string;
}
/******************************************************************************
 *                        ABSTRACT BASE CLASS
 *****************************************************************************/
/**
 * Abstract base class for an Agent.
 * Contains methods and attributes valid for Agents either created with CDK or imported.
 */
export declare abstract class AgentBase extends Resource implements IAgent {
    abstract readonly agentArn: string;
    abstract readonly agentId: string;
    abstract readonly role: iam.IRole;
    abstract readonly kmsKey?: kms.IKey;
    abstract readonly lastUpdated?: string;
    abstract agentVersion: string;
}
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
/**
 * Properties for creating a CDK managed Bedrock Agent.
 */
export interface AgentProps {
    /**
     * The name of the agent.
     *
     * @default - A name is generated by CDK.
     */
    readonly name?: string;
    /**
     * The instruction used by the agent. This determines how the agent will perform his task.
     * This instruction must have a minimum of 40 characters.
     */
    readonly instruction: string;
    /**
     * The foundation model used for orchestration by the agent.
     */
    readonly foundationModel: IInvokable;
    /**
     * The existing IAM Role for the agent to use.
     * Ensure the role has a trust policy that allows the Bedrock service to assume the role.
     *
     * @default - A new role is created for you.
     */
    readonly existingRole?: iam.IRole;
    /**
     * Specifies whether to automatically update the `DRAFT` version of the agent after
     * making changes to the agent. The `DRAFT` version can be continually iterated
     * upon during internal development.
     *
     * @default - false
     */
    readonly shouldPrepareAgent?: boolean;
    /**
     * How long sessions should be kept open for the agent. If no conversation occurs
     * during this time, the session expires and Amazon Bedrock deletes any data
     * provided before the timeout.
     *
     * @default - 1 hour
     */
    readonly idleSessionTTL?: Duration;
    /**
     * The KMS key of the agent if custom encryption is configured.
     *
     * @default - An AWS managed key is used.
     */
    readonly kmsKey?: kms.IKey;
    /**
     * A description of the agent.
     *
     * @default - No description is provided.
     */
    readonly description?: string;
    /**
     * The KnowledgeBases associated with the agent.
     */
    readonly knowledgeBases?: IKnowledgeBase[];
    /**
     * The Action Groups associated with the agent.
     */
    readonly actionGroups?: AgentActionGroup[];
    /**
     * The guardrail that will be associated with the agent.
     */
    readonly guardrail?: IGuardrail;
    /**
     * Overrides some prompt templates in different parts of an agent sequence configuration.
     *
     * @default - No overrides are provided.
     */
    readonly promptOverrideConfiguration?: PromptOverrideConfiguration;
    /**
     * Select whether the agent can prompt additional information from the user when it does not have
     * enough information to respond to an utterance
     *
     * @default - false
     */
    readonly userInputEnabled?: boolean;
    /**
     * Select whether the agent can generate, run, and troubleshoot code when trying to complete a task
     *
     * @default - false
     */
    readonly codeInterpreterEnabled?: boolean;
    /**
     * Whether to delete the resource even if it's in use.
     *
     * @default - true
     */
    readonly forceDelete?: boolean;
    /**
     * The type and configuration of the memory to maintain context across multiple sessions and recall past interactions.
     * This can be useful for maintaining continuity in multi-turn conversations and recalling user preferences
     * or past interactions.
     *
     * @see https://docs.aws.amazon.com/bedrock/latest/userguide/agents-memory.html
     * @default - No memory will be used. Agents will retain context from the current session only.
     */
    readonly memory?: Memory;
    /**
     * The collaboration type for the agent.
     *
     * @default - No collaboration (AgentCollaboratorType.DISABLED).
     */
    readonly agentCollaboration?: AgentCollaboratorType;
    /**
     * Collaborators that this agent will work with.
     *
     * @default - No collaborators.
     */
    readonly agentCollaborators?: AgentCollaborator[];
    /**
     * Details of custom orchestration for the agent.
     *
     * @default - Standard orchestration.
     */
    readonly customOrchestration?: CustomOrchestration;
    /**
     * The type of orchestration to use for the agent.
     *
     * @default - STANDARD
     */
    readonly orchestrationType?: OrchestrationType;
}
/******************************************************************************
 *                      ATTRS FOR IMPORTED CONSTRUCT
 *****************************************************************************/
/**
 * Attributes for specifying an imported Bedrock Agent.
 */
export interface AgentAttributes {
    /**
     * The ARN of the agent.
     * @example "arn:aws:bedrock:us-east-1:123456789012:agent/OKDSJOGKMO"
     * @attribute
     */
    readonly agentArn: string;
    /**
     * The ARN of the IAM role associated to the agent.
     * @example "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
     * @attribute
     */
    readonly roleArn: string;
    /**
     * Optional KMS encryption key associated with this agent
     */
    readonly kmsKeyArn?: string;
    /**
     * When this agent was last updated.
     */
    readonly lastUpdated?: string;
    /**
     * The agent version. If no explicit versions have been created,
     * leave this  empty to use the DRAFT version. Otherwise, use the
     * version number (e.g. 1).
     */
    readonly agentVersion?: string;
}
/******************************************************************************
 *                        NEW CONSTRUCT DEFINITION
 *****************************************************************************/
/**
 * Class to create (or import) an Agent with CDK.
 * @cloudformationResource AWS::Bedrock::Agent
 */
export declare class Agent extends AgentBase {
    /**
     * Static Method for importing an existing Bedrock Agent.
     */
    static fromAgentAttrs(scope: Construct, id: string, attrs: AgentAttributes): IAgent;
    /**
     * The unique identifier for the agent
     */
    readonly agentId: string;
    /**
     * The ARN of the agent.
     */
    readonly agentArn: string;
    /**
     * The version of the agent.
     */
    agentVersion: string;
    /**
     * The IAM role associated to the agent.
     */
    readonly role: iam.IRole;
    /**
     * Optional KMS encryption key associated with this agent
     */
    readonly kmsKey?: kms.IKey;
    /**
     * When this agent was last updated.
     */
    readonly lastUpdated?: string;
    /**
     * The name of the agent.
     */
    readonly name: string;
    /**
     * Whether the agent will automatically update the DRAFT version of the agent after
     * making changes to the agent.
     */
    readonly shouldPrepareAgent: boolean;
    /**
     * How long sessions should be kept open for the agent.
     */
    readonly idleSessionTTL: Duration;
    /**
     * The foundation model used for orchestration by the agent.
     */
    readonly foundationModel: IInvokable;
    /**
     * The default test alias for this agent. This corresponds to the test alias
     * (`TSTALIASID`) that points to the working (`DRAFT`) version.
     */
    readonly testAlias: IAgentAlias;
    /**
     * Whether the agent can prompt additional information from the user when it does not have
     * enough information to respond to an utterance
     */
    readonly userInputEnabled: boolean;
    /**
     * Whether the agent can generate, run, and troubleshoot code when trying to complete a task.
     */
    readonly codeInterpreterEnabled: boolean;
    /**
     * Whether the resource will be deleted even if it's in use.
     */
    readonly forceDelete: boolean;
    /**
     * Agent collaboration type.
     */
    readonly agentCollaboration?: AgentCollaboratorType;
    /**
     * Agent collaborators.
     */
    readonly agentCollaborators?: AgentCollaborator[];
    /**
     * Custom orchestration configuration.
     */
    readonly customOrchestration?: CustomOrchestration;
    /**
     * The type of orchestration for the agent.
     */
    readonly orchestrationType?: OrchestrationType;
    /**
     * The description for the agent.
     */
    readonly description?: string;
    /**
     * The instruction used by the agent. This determines how the agent will perform his task.
     */
    readonly instruction?: string;
    /**
     * Overrides some prompt templates in different parts of an agent sequence configuration.
     *
     * @default - No overrides are provided.
     */
    readonly promptOverrideConfiguration?: PromptOverrideConfiguration;
    /**
     * The memory configuration for the agent.
     */
    readonly memory?: Memory;
    /**
     * The action groups associated with the agent.
     */
    actionGroups: AgentActionGroup[];
    /**
     * The KnowledgeBases associated with the agent.
     */
    knowledgeBases: IKnowledgeBase[];
    /**
     * The guardrail associated with the agent.
     */
    guardrail?: IGuardrail;
    /**
     * The L1 representation of the agent
     */
    private readonly __resource;
    constructor(scope: Construct, id: string, props: AgentProps);
    /**
     * Add knowledge base to the agent.
     */
    addKnowledgeBase(knowledgeBase: IKnowledgeBase): void;
    /**
     * Add guardrail to the agent.
     */
    addGuardrail(guardrail: IGuardrail): void;
    /**
     * Add an action group to the agent.
     */
    addActionGroup(actionGroup: AgentActionGroup): void;
    /**
     * Add an agent collaborator to the agent.
     */
    addAgentCollaborator(agentCollaborator: AgentCollaborator): void;
    /**
     * Add multiple action groups to the agent.
     */
    addActionGroups(...actionGroups: AgentActionGroup[]): void;
    /**
     * Render the guardrail configuration.
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private renderGuardrail;
    /**
     * Render the knowledge base associations.
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private renderKnowledgeBases;
    /**
     * Render the action groups
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private renderActionGroups;
    /**
     * Render the agent collaborators.
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private renderAgentCollaborators;
    /**
     * Render the custom orchestration.
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private renderCustomOrchestration;
    /**
     * Checks if the KB Association is valid
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private validateKnowledgeBase;
    /**
     * Checks if the KB Associations are valid
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private validateKnowledgeBaseAssocations;
    /**
     * Checks if the Guardrail is valid
     *
     * @internal This is an internal core function and should not be called directly.
     */
    private validateGuardrail;
    /**
     * Check if the action group is valid
     */
    private validateActionGroup;
}
