"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionGroupExecutor = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/******************************************************************************
 *                         Action Group Executor
 *****************************************************************************/
/**
 * Defines how fulfillment of the action group is handled after the necessary
 * information has been elicited from the user.
 * Valid executors are:
 * - Lambda function
 * - Return Control
 * @see https://docs.aws.amazon.com/bedrock/latest/userguide/action-handle.html
 */
class ActionGroupExecutor {
    /**
     * Defines an action group with a Lambda function containing the business logic.
     * @param lambdaFunction - Lambda function to be called by the action group.
     * @see https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html
     */
    static fromlambdaFunction(lambdaFunction) {
        return new ActionGroupExecutor(lambdaFunction, undefined);
    }
    constructor(lambdaFunction, customControl) {
        this.lambdaFunction = lambdaFunction;
        this.customControl = customControl;
    }
    /**
     * Format as CFN properties
     *
     * @internal This is an internal core function and should not be called directly.
     */
    _render() {
        return {
            customControl: this.customControl,
            lambda: this.lambdaFunction?.functionArn,
        };
    }
}
exports.ActionGroupExecutor = ActionGroupExecutor;
_a = JSII_RTTI_SYMBOL_1;
ActionGroupExecutor[_a] = { fqn: "@cdklabs/generative-ai-cdk-constructs.bedrock.ActionGroupExecutor", version: "0.1.309" };
/**
 * Returns the action group invocation results directly in the InvokeAgent response.
 * The information and parameters can be sent to your own systems to yield results.
 * @see https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html
 */
ActionGroupExecutor.RETURN_CONTROL = new ActionGroupExecutor(undefined, 'RETURN_CONTROL');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLWV4ZWN1dG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2Nkay1saWIvYmVkcm9jay9hZ2VudHMvYXBpLWV4ZWN1dG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBZ0JBOzsrRUFFK0U7QUFDL0U7Ozs7Ozs7R0FPRztBQUNILE1BQWEsbUJBQW1CO0lBUTlCOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsa0JBQWtCLENBQUMsY0FBeUI7UUFDeEQsT0FBTyxJQUFJLG1CQUFtQixDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBS0QsWUFBb0IsY0FBMEIsRUFBRSxhQUFzQjtRQUNwRSxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztJQUNyQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE9BQU87UUFDWixPQUFPO1lBQ0wsYUFBYSxFQUFFLElBQUksQ0FBQyxhQUFhO1lBQ2pDLE1BQU0sRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLFdBQVc7U0FDekMsQ0FBQztJQUNKLENBQUM7O0FBbkNILGtEQW9DQzs7O0FBbkNDOzs7O0dBSUc7QUFDb0Isa0NBQWMsR0FBRyxJQUFJLG1CQUFtQixDQUFDLFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAgQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqICB3aXRoIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YgdGhlIExpY2Vuc2UgaXMgbG9jYXRlZCBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIG9yIGluIHRoZSAnbGljZW5zZScgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gJ0FTIElTJyBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTXG4gKiAgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqICBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0ICogYXMgYmVkcm9jayBmcm9tICdhd3MtY2RrLWxpYi9hd3MtYmVkcm9jayc7XG5pbXBvcnQgeyBJRnVuY3Rpb24gfSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtbGFtYmRhJztcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogICAgICAgICAgICAgICAgICAgICAgICAgQWN0aW9uIEdyb3VwIEV4ZWN1dG9yXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKipcbiAqIERlZmluZXMgaG93IGZ1bGZpbGxtZW50IG9mIHRoZSBhY3Rpb24gZ3JvdXAgaXMgaGFuZGxlZCBhZnRlciB0aGUgbmVjZXNzYXJ5XG4gKiBpbmZvcm1hdGlvbiBoYXMgYmVlbiBlbGljaXRlZCBmcm9tIHRoZSB1c2VyLlxuICogVmFsaWQgZXhlY3V0b3JzIGFyZTpcbiAqIC0gTGFtYmRhIGZ1bmN0aW9uXG4gKiAtIFJldHVybiBDb250cm9sXG4gKiBAc2VlIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9iZWRyb2NrL2xhdGVzdC91c2VyZ3VpZGUvYWN0aW9uLWhhbmRsZS5odG1sXG4gKi9cbmV4cG9ydCBjbGFzcyBBY3Rpb25Hcm91cEV4ZWN1dG9yIHtcbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGFjdGlvbiBncm91cCBpbnZvY2F0aW9uIHJlc3VsdHMgZGlyZWN0bHkgaW4gdGhlIEludm9rZUFnZW50IHJlc3BvbnNlLlxuICAgKiBUaGUgaW5mb3JtYXRpb24gYW5kIHBhcmFtZXRlcnMgY2FuIGJlIHNlbnQgdG8geW91ciBvd24gc3lzdGVtcyB0byB5aWVsZCByZXN1bHRzLlxuICAgKiBAc2VlIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9iZWRyb2NrL2xhdGVzdC91c2VyZ3VpZGUvYWdlbnRzLXJldHVybmNvbnRyb2wuaHRtbFxuICAgKi9cbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBSRVRVUk5fQ09OVFJPTCA9IG5ldyBBY3Rpb25Hcm91cEV4ZWN1dG9yKHVuZGVmaW5lZCwgJ1JFVFVSTl9DT05UUk9MJyk7XG5cbiAgLyoqXG4gICAqIERlZmluZXMgYW4gYWN0aW9uIGdyb3VwIHdpdGggYSBMYW1iZGEgZnVuY3Rpb24gY29udGFpbmluZyB0aGUgYnVzaW5lc3MgbG9naWMuXG4gICAqIEBwYXJhbSBsYW1iZGFGdW5jdGlvbiAtIExhbWJkYSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgYnkgdGhlIGFjdGlvbiBncm91cC5cbiAgICogQHNlZSBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vYmVkcm9jay9sYXRlc3QvdXNlcmd1aWRlL2FnZW50cy1sYW1iZGEuaHRtbFxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBmcm9tbGFtYmRhRnVuY3Rpb24obGFtYmRhRnVuY3Rpb246IElGdW5jdGlvbik6IEFjdGlvbkdyb3VwRXhlY3V0b3Ige1xuICAgIHJldHVybiBuZXcgQWN0aW9uR3JvdXBFeGVjdXRvcihsYW1iZGFGdW5jdGlvbiwgdW5kZWZpbmVkKTtcbiAgfVxuXG4gIHB1YmxpYyByZWFkb25seSBsYW1iZGFGdW5jdGlvbj86IElGdW5jdGlvbjtcbiAgcHVibGljIHJlYWRvbmx5IGN1c3RvbUNvbnRyb2w/OiBzdHJpbmc7XG5cbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcihsYW1iZGFGdW5jdGlvbj86IElGdW5jdGlvbiwgY3VzdG9tQ29udHJvbD86IHN0cmluZykge1xuICAgIHRoaXMubGFtYmRhRnVuY3Rpb24gPSBsYW1iZGFGdW5jdGlvbjtcbiAgICB0aGlzLmN1c3RvbUNvbnRyb2wgPSBjdXN0b21Db250cm9sO1xuICB9XG5cbiAgLyoqXG4gICAqIEZvcm1hdCBhcyBDRk4gcHJvcGVydGllc1xuICAgKlxuICAgKiBAaW50ZXJuYWwgVGhpcyBpcyBhbiBpbnRlcm5hbCBjb3JlIGZ1bmN0aW9uIGFuZCBzaG91bGQgbm90IGJlIGNhbGxlZCBkaXJlY3RseS5cbiAgICovXG4gIHB1YmxpYyBfcmVuZGVyKCk6IGJlZHJvY2suQ2ZuQWdlbnQuQWN0aW9uR3JvdXBFeGVjdXRvclByb3BlcnR5IHtcbiAgICByZXR1cm4ge1xuICAgICAgY3VzdG9tQ29udHJvbDogdGhpcy5jdXN0b21Db250cm9sLFxuICAgICAgbGFtYmRhOiB0aGlzLmxhbWJkYUZ1bmN0aW9uPy5mdW5jdGlvbkFybixcbiAgICB9O1xuICB9XG59XG4iXX0=